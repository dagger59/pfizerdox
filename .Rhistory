# URL:
# DESCRIPTION: Get number of vaccinations by day
df <- vaers.combined.df
nrow(df) # 738115
df <- filter(df, VAX_DATE_R >= dFrom)
df <- filter(df, VAX_DATE_R <= dTo)
df <- filter(df, IS_COVID == 1)
nrow(df) # 668038
# Group VAERS by VAXs
df.grp.vaers.vax <- df %>%
group_by(DATE_R=VAX_DATE_R, AgeGroup) %>%
summarize(
sum_vax = n(),
) %>%
select (
"DATE_R",
"AgeGroup",
"sum_vax"
) %>%
arrange(DATE_R)
sum(df.grp.vaers.vax$sum_vax)
View(df.grp.vaers.vax)
#----------------------------------
# BEGIN [3]
# URL:
# DESCRIPTION: Plot deaths over time from VAERS
df <- vaers.combined.df
nrow(df) # 738115
df <- filter(df, VAX_DATE_R >= dFrom)
df <- filter(df, VAX_DATE_R <= dTo)
df <- filter(df, IS_COVID == 1)
df <- filter(df, DIED == "Y")
#----------------------------------
# BEGIN [3]
# URL:
# DESCRIPTION: Plot deaths over time from VAERS
df <- vaers.combined.df
nrow(df) # 738115
df <- filter(df, VAX_DATE_R >= dFrom)
df <- filter(df, VAX_DATE_R <= dTo)
df <- filter(df, IS_COVID == 1)
df <- filter(df, DIED == "Y")
df <- filter(df, VAX_DOSE_SERIES <= 2)
df <- filter(df, VAX_DUPS == 1)   # 33652
nrow(df) # View(df) # 7117 (9820)
# Group VAERS by OBS
df.grp.vaers.obs <- df %>%
group_by(DATE_R=VAX_DATE_R, AgeGroup) %>%
summarize(
obs = n(),
med_age = median(AGE_YRS, na.rm = TRUE),
) %>%
select (
"DATE_R",
"AgeGroup",
"obs",
"med_age",
) %>%
arrange(DATE_R,AgeGroup) # View(df.grp.vaers.obs)
df.grp.vaers.obs$YR <- lubridate::isoyear(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$WK <- lubridate::isoweek(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$Weekday <- lubridate::wday(df.grp.vaers.obs$DATE_R, label=TRUE, abbr=FALSE)
# DAY - Join the data frames
vaers.vax.obs.df <- left_join(df.grp.vaers.obs, df.grp.vaers.vax, by=c("DATE_R" = "DATE_R", "AgeGroup" = "AgeGroup"))
vaers.vax.obs.df$OBS_RATE <- 100000*vaers.vax.obs.df$obs / vaers.vax.obs.df$sum_vax
# DAY - Tidy Inf values
vaers.vax.obs.df <- do.call(data.frame,lapply(vaers.vax.obs.df, function(x) replace(x, is.infinite(x),NA)))
# Group VAERS by OBS
df.grp.vaers.obs <- df %>%
group_by(DATE_R=VAX_DATE_R, AgeGroup) %>%
summarize(
obs = n(),
med_age = median(AGE_YRS, na.rm = TRUE),
) %>%
select (
"DATE_R",
"AgeGroup",
"obs",
"med_age",
) %>%
arrange(DATE_R,AgeGroup) # View(df.grp.vaers.obs)
df.grp.vaers.obs$YR <- lubridate::isoyear(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$WK <- lubridate::isoweek(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$Weekday <- lubridate::wday(df.grp.vaers.obs$DATE_R, label=TRUE, abbr=FALSE)
# DAY - Join the data frames
vaers.vax.obs.df <- left_join(df.grp.vaers.obs, df.grp.vaers.vax, by=c("DATE_R" = "DATE_R", "AgeGroup" = "AgeGroup"))
# DAY - Tidy Inf values
vaers.vax.obs.df <- do.call(data.frame,lapply(vaers.vax.obs.df, function(x) replace(x, is.infinite(x),NA)))
# DAY - Plot obs by DAY
ggplot(data=vaers.vax.obs.df, aes(x=DATE_R, y=obs)) +
labs(title = paste0("Deaths by injection date (VAX_DATE) between ", dFrom, " to ", dTo), caption=paste("Source: VAERS (n=", format(round(sum(vaers.vax.obs.df$obs),0), big.mark=","), ")"), x="Date (VAX_DATE)", y="Deaths per day") +
theme(
plot.title = element_text(hjust = 0.5, size = 14),    # Center title position and size
plot.caption = element_text(hjust = 1), # move caption to the left
axis.text.x = element_text(angle = 90, vjust = 0.25, hjust=1), # rotate X axis labels
legend.position = "top" # Legend position
) +
geom_line(alpha=0.7, color="blue") +
scale_x_date(limits = as.Date(c(dFrom, dTo)), date_labels="%b-%d-%y",date_breaks  ="2 month") +
facet_wrap(~AgeGroup)
# DAY - Group VAERS by DAY
grp.vaers.vax.obs.df <- vaers.vax.obs.df %>%
group_by(Weekday) %>%
summarize(
sum_obs = sum(obs, na.rm = TRUE),
sum_vax = sum(sum_vax, na.rm = TRUE),
)
# Plot
plot(grp.vaers.vax.obs.df$sum_vax,grp.vaers.vax.obs.df$sum_obs,
main='Vaccinations: Deaths by Day of Week',
xlab='Vaccinations',
ylab='Deaths')
abline(lm(grp.vaers.vax.obs.df$sum_obs~grp.vaers.vax.obs.df$sum_vax),col='red',lwd=2)
cor.test(grp.vaers.vax.obs.df$sum_vax,grp.vaers.vax.obs.df$sum_obs)
#----------------------------------
# BEGIN [3]
# URL:
# DESCRIPTION: Plot deaths over time from VAERS
df <- vaers.combined.df
nrow(df) # 738115
df <- filter(df, VAX_DATE_R >= dFrom)
df <- filter(df, VAX_DATE_R <= dTo)
df <- filter(df, IS_COVID == 1)
df <- filter(df, DIED == "Y")
df <- filter(df, VAX_DOSE_SERIES <= 2)
df <- filter(df, VAX_DUPS == 1)   # 33652
nrow(df) # View(df) # 7117 (9820)
cor.test(grp.vaers.vax.obs.df$sum_vax,grp.vaers.vax.obs.df$sum_obs)
#----------------------------------
# BEGIN [3]
# URL:
# DESCRIPTION: Plot deaths over time from VAERS
df <- vaers.combined.df
nrow(df) # 738115
df <- filter(df, VAX_DATE_R >= dFrom)
df <- filter(df, VAX_DATE_R <= dTo)
df <- filter(df, IS_COVID == 1)
df <- filter(df, DIED == "Y")
df <- filter(df, VAX_DOSE_SERIES <= 2)
df <- filter(df, VAX_DUPS == 1)   # 33652
nrow(df) # View(df) # 7117 (5751)
# Group VAERS by OBS
df.grp.vaers.obs <- df %>%
group_by(DATE_R=VAX_DATE_R, AgeGroup) %>%
summarize(
obs = n(),
med_age = median(AGE_YRS, na.rm = TRUE),
) %>%
select (
"DATE_R",
"AgeGroup",
"obs",
"med_age",
) %>%
arrange(DATE_R,AgeGroup) # View(df.grp.vaers.obs)
df.grp.vaers.obs$YR <- lubridate::isoyear(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$WK <- lubridate::isoweek(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$Weekday <- lubridate::wday(df.grp.vaers.obs$DATE_R, label=TRUE, abbr=TRUE)
# DAY - Join the data frames
vaers.vax.obs.df <- left_join(df.grp.vaers.obs, df.grp.vaers.vax, by=c("DATE_R" = "DATE_R", "AgeGroup" = "AgeGroup"))
View(vaers.vax.obs.df)
#----------------------------------
# BEGIN [2]
# URL:
# DESCRIPTION: Get number of vaccinations by day
df <- vaers.combined.df
nrow(df) # 738115
df <- filter(df, VAX_DATE_R >= dFrom)
df <- filter(df, VAX_DATE_R <= dTo)
df <- filter(df, IS_COVID == 1)
nrow(df) # 668038
# Group VAERS by VAXs
df.grp.vaers.vax <- df %>%
group_by(DATE_R=VAX_DATE_R, State) %>%
summarize(
sum_vax = n(),
) %>%
select (
"DATE_R",
"AgeGroup",
"sum_vax"
) %>%
arrange(DATE_R)
#----------------------------------
# BEGIN [2]
# URL:
# DESCRIPTION: Get number of vaccinations by day
df <- vaers.combined.df
nrow(df) # 738115
df <- filter(df, VAX_DATE_R >= dFrom)
df <- filter(df, VAX_DATE_R <= dTo)
df <- filter(df, IS_COVID == 1)
nrow(df) # 668038
# Group VAERS by VAXs
df.grp.vaers.vax <- df %>%
group_by(DATE_R=VAX_DATE_R, STATE) %>%
summarize(
sum_vax = n(),
) %>%
select (
"DATE_R",
"AgeGroup",
"sum_vax"
) %>%
arrange(DATE_R)
# Group VAERS by VAXs
df.grp.vaers.vax <- df %>%
group_by(DATE_R=VAX_DATE_R, STATE) %>%
summarize(
sum_vax = n(),
) %>%
select (
"DATE_R",
"STATE",
"sum_vax"
) %>%
arrange(DATE_R)
sum(df.grp.vaers.vax$sum_vax)
#----------------------------------
# BEGIN [3]
# URL:
# DESCRIPTION: Plot deaths over time from VAERS
df <- vaers.combined.df
nrow(df) # 738115
df <- filter(df, VAX_DATE_R >= dFrom)
df <- filter(df, VAX_DATE_R <= dTo)
df <- filter(df, IS_COVID == 1)
df <- filter(df, DIED == "Y")
df <- filter(df, VAX_DOSE_SERIES <= 2)
df <- filter(df, VAX_DUPS == 1)   # 33652
nrow(df) # View(df) # 7117 (5751)
# Group VAERS by OBS
df.grp.vaers.obs <- df %>%
group_by(DATE_R=VAX_DATE_R, STATE) %>%
summarize(
obs = n(),
med_age = median(AGE_YRS, na.rm = TRUE),
) %>%
select (
"DATE_R",
"STATE",
"obs",
"med_age",
) %>%
arrange(DATE_R,AgeGroup) # View(df.grp.vaers.obs)
# Group VAERS by OBS
df.grp.vaers.obs <- df %>%
group_by(DATE_R=VAX_DATE_R, STATE) %>%
summarize(
obs = n(),
med_age = median(AGE_YRS, na.rm = TRUE),
) %>%
select (
"DATE_R",
"STATE",
"obs",
"med_age",
) %>%
arrange(DATE_R,STATE) # View(df.grp.vaers.obs)
df.grp.vaers.obs$YR <- lubridate::isoyear(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$WK <- lubridate::isoweek(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$Weekday <- lubridate::wday(df.grp.vaers.obs$DATE_R, label=TRUE, abbr=TRUE)
# DAY - Join the data frames
vaers.vax.obs.df <- left_join(df.grp.vaers.obs, df.grp.vaers.vax, by=c("DATE_R" = "DATE_R", "AgeGroup" = "AgeGroup"))
# DAY - Tidy Inf values
vaers.vax.obs.df <- do.call(data.frame,lapply(vaers.vax.obs.df, function(x) replace(x, is.infinite(x),NA)))
# DAY - Plot obs by DAY
ggplot(data=vaers.vax.obs.df, aes(x=DATE_R, y=obs)) +
labs(title = paste0("Deaths by injection date (VAX_DATE) between ", dFrom, " to ", dTo), caption=paste("Source: VAERS (n=", format(round(sum(vaers.vax.obs.df$obs),0), big.mark=","), ")"), x="Date (VAX_DATE)", y="Deaths per day") +
theme(
plot.title = element_text(hjust = 0.5, size = 14),    # Center title position and size
plot.caption = element_text(hjust = 1), # move caption to the left
axis.text.x = element_text(angle = 90, vjust = 0.25, hjust=1), # rotate X axis labels
legend.position = "top" # Legend position
) +
geom_line(alpha=0.7, color="blue") +
scale_x_date(limits = as.Date(c(dFrom, dTo)), date_labels="%b-%d-%y",date_breaks  ="2 month") +
facet_wrap(~STATE)
# Group VAERS by OBS
df.grp.vaers.obs <- df %>%
group_by(DATE_R=VAX_DATE_R, STATE) %>%
summarize(
obs = n(),
med_age = median(AGE_YRS, na.rm = TRUE),
) %>%
select (
"DATE_R",
"STATE",
"obs",
"med_age",
) %>%
arrange(DATE_R,STATE) # View(df.grp.vaers.obs)
View(df.grp.vaers.obs)
# Group VAERS by OBS
df.grp.vaers.obs <- df %>%
group_by(DATE_R=VAX_DATE_R, STATE) %>%
summarize(
obs = n(),
med_age = median(AGE_YRS, na.rm = TRUE),
) %>%
select (
"DATE_R",
"STATE",
"obs",
"med_age",
) %>%
arrange(DATE_R,STATE) # View(df.grp.vaers.obs)
df.grp.vaers.obs$YR <- lubridate::isoyear(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$WK <- lubridate::isoweek(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$Weekday <- lubridate::wday(df.grp.vaers.obs$DATE_R, label=TRUE, abbr=TRUE)
# DAY - Join the data frames
vaers.vax.obs.df <- left_join(df.grp.vaers.obs, df.grp.vaers.vax, by=c("DATE_R" = "DATE_R", "AgeGroup" = "AgeGroup"))
# DAY - Join the data frames
vaers.vax.obs.df <- left_join(df.grp.vaers.obs, df.grp.vaers.vax, by=c("DATE_R" = "DATE_R", "STATE" = "STATE"))
# DAY - Tidy Inf values
vaers.vax.obs.df <- do.call(data.frame,lapply(vaers.vax.obs.df, function(x) replace(x, is.infinite(x),NA)))
# DAY - Plot obs by DAY
ggplot(data=vaers.vax.obs.df, aes(x=DATE_R, y=obs)) +
labs(title = paste0("Deaths by injection date (VAX_DATE) between ", dFrom, " to ", dTo), caption=paste("Source: VAERS (n=", format(round(sum(vaers.vax.obs.df$obs),0), big.mark=","), ")"), x="Date (VAX_DATE)", y="Deaths per day") +
theme(
plot.title = element_text(hjust = 0.5, size = 14),    # Center title position and size
plot.caption = element_text(hjust = 1), # move caption to the left
axis.text.x = element_text(angle = 90, vjust = 0.25, hjust=1), # rotate X axis labels
legend.position = "top" # Legend position
) +
geom_line(alpha=0.7, color="blue") +
scale_x_date(limits = as.Date(c(dFrom, dTo)), date_labels="%b-%d-%y",date_breaks  ="2 month") +
facet_wrap(~STATE)
# DAY - Plot obs by DAY
ggplot(data=vaers.vax.obs.df, aes(x=DATE_R, y=obs)) +
labs(title = paste0("Deaths by injection date (VAX_DATE) between ", dFrom, " to ", dTo), caption=paste("Source: VAERS (n=", format(round(sum(vaers.vax.obs.df$obs),0), big.mark=","), ")"), x="Date (VAX_DATE)", y="Deaths per day") +
theme(
plot.title = element_text(hjust = 0.5, size = 14),    # Center title position and size
plot.caption = element_text(hjust = 1), # move caption to the left
axis.text.x = element_text(angle = 90, vjust = 0.25, hjust=1), # rotate X axis labels
legend.position = "top" # Legend position
) +
#geom_line(alpha=0.7, color="blue") +
geom_bar(stat="identity", alpha=0.7, color="blue") +
scale_x_date(limits = as.Date(c(dFrom, dTo)), date_labels="%b-%d-%y",date_breaks  ="2 month") +
facet_wrap(~STATE)
# DAY - Group VAERS by DAY
grp.vaers.vax.obs.df <- vaers.vax.obs.df %>%
group_by(Weekday) %>%
summarize(
sum_obs = sum(obs, na.rm = TRUE),
sum_vax = sum(sum_vax, na.rm = TRUE),
)
# Plot
plot(grp.vaers.vax.obs.df$sum_vax,grp.vaers.vax.obs.df$sum_obs,
main='Vaccinations: Deaths by Day of Week',
xlab='Vaccinations',
ylab='Deaths')
abline(lm(grp.vaers.vax.obs.df$sum_obs~grp.vaers.vax.obs.df$sum_vax),col='red',lwd=2)
cor.test(grp.vaers.vax.obs.df$sum_vax,grp.vaers.vax.obs.df$sum_obs)
# DAY - Plot obs by DAY
ggplot(data=vaers.vax.obs.df, aes(x=DATE_R, y=obs)) +
labs(title = paste0("Deaths by injection date (VAX_DATE) between ", dFrom, " to ", dTo), caption=paste("Source: VAERS (n=", format(round(sum(vaers.vax.obs.df$obs),0), big.mark=","), ")"), x="Date (VAX_DATE)", y="Deaths per day") +
theme(
plot.title = element_text(hjust = 0.5, size = 14),    # Center title position and size
plot.caption = element_text(hjust = 1), # move caption to the left
axis.text.x = element_text(angle = 90, vjust = 0.25, hjust=1), # rotate X axis labels
legend.position = "top" # Legend position
) +
#geom_line(alpha=0.7, color="blue") +
geom_bar(stat="identity", alpha=0.7, color="blue") +
scale_x_date(limits = as.Date(c(dFrom, dTo)), date_labels="%b-%d-%y",date_breaks  ="2 month") +
facet_wrap(~STATE)
# Plot
plot(grp.vaers.vax.obs.df$sum_vax,grp.vaers.vax.obs.df$sum_obs,
main='Vaccinations: Deaths by Day of Week',
xlab='Vaccinations',
ylab='Deaths')
abline(lm(grp.vaers.vax.obs.df$sum_obs~grp.vaers.vax.obs.df$sum_vax),col='red',lwd=2)
cor.test(grp.vaers.vax.obs.df$sum_vax,grp.vaers.vax.obs.df$sum_obs)
View(df.grp.vaers.vax)
#----------------------------------
# BEGIN [1]
# URL:
# DESCRIPTION: Get number of vaccinations by day
df <- vaers.combined.df
nrow(df) # 738115
df <- filter(df, VAX_DATE_R >= dFrom)
df <- filter(df, VAX_DATE_R <= dTo)
df <- filter(df, IS_COVID == 1)
nrow(df) # 668038
# Group VAERS by VAXs
df.grp.vaers.vax <- df %>%
group_by(DATE_R=VAX_DATE_R, STATE) %>%
summarize(
sum_ae = n(),
) %>%
select (
"DATE_R",
"STATE",
"sum_ae"
) %>%
arrange(DATE_R)
# Group VAERS by VAXs
df.grp.vaers.vax <- df %>%
#group_by(DATE_R=VAX_DATE_R, STATE) %>%
group_by(DATE_R=DIED_DATE_R, STATE) %>%
summarize(
sum_ae = n(),
) %>%
select (
"DATE_R",
"STATE",
"sum_ae"
) %>%
arrange(DATE_R)
sum(df.grp.vaers.vax$sum_ae)
#----------------------------------
# BEGIN [3]
# URL:
# DESCRIPTION: Plot deaths over time from VAERS
df <- vaers.combined.df
nrow(df) # 738115
df <- filter(df, VAX_DATE_R >= dFrom)
df <- filter(df, VAX_DATE_R <= dTo)
df <- filter(df, IS_COVID == 1)
df <- filter(df, DIED == "Y")
df <- filter(df, VAX_DOSE_SERIES <= 2)
df <- filter(df, VAX_DUPS == 1)   # 33652
nrow(df) # View(df) # 7117 (5751)
# Group VAERS by OBS
df.grp.vaers.obs <- df %>%
#group_by(DATE_R=VAX_DATE_R, STATE) %>%
group_by(DATE_R=DIED_DATE_R, STATE) %>%
summarize(
obs = n(),
med_age = median(AGE_YRS, na.rm = TRUE),
) %>%
select (
"DATE_R",
"STATE",
"obs",
"med_age",
) %>%
arrange(DATE_R,STATE)
# Add date fields
df.grp.vaers.obs$YR <- lubridate::isoyear(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$WK <- lubridate::isoweek(df.grp.vaers.obs$DATE_R)
df.grp.vaers.obs$Weekday <- lubridate::wday(df.grp.vaers.obs$DATE_R, label=TRUE, abbr=TRUE)
# DAY - Join the data frames
vaers.vax.obs.df <- left_join(df.grp.vaers.obs, df.grp.vaers.vax, by=c("DATE_R" = "DATE_R", "STATE" = "STATE"))
# DAY - Tidy Inf values
vaers.vax.obs.df <- do.call(data.frame,lapply(vaers.vax.obs.df, function(x) replace(x, is.infinite(x),NA)))
# DAY - Plot obs by DAY
ggplot(data=vaers.vax.obs.df, aes(x=DATE_R, y=obs)) +
labs(title = paste0("Deaths by injection date (VAX_DATE) between ", dFrom, " to ", dTo), caption=paste("Source: VAERS (n=", format(round(sum(vaers.vax.obs.df$obs),0), big.mark=","), ")"), x="Date (VAX_DATE)", y="Deaths per day") +
theme(
plot.title = element_text(hjust = 0.5, size = 14),    # Center title position and size
plot.caption = element_text(hjust = 1), # move caption to the left
axis.text.x = element_text(angle = 90, vjust = 0.25, hjust=1), # rotate X axis labels
legend.position = "top" # Legend position
) +
#geom_line(alpha=0.7, color="blue") +
geom_bar(stat="identity", alpha=0.7, color="blue") +
scale_x_date(limits = as.Date(c(dFrom, dTo)), date_labels="%b-%d-%y",date_breaks  ="2 month") +
facet_wrap(~STATE)
# DAY - Plot obs by DAY
ggplot(data=vaers.vax.obs.df, aes(x=DATE_R, y=obs)) +
labs(title = paste0("Deaths by injection date (DIED_DATE) between ", dFrom, " to ", dTo), caption=paste("Source: VAERS (n=", format(round(sum(vaers.vax.obs.df$obs),0), big.mark=","), ")"), x="Date (DIED_DATE)", y="Deaths per day") +
theme(
plot.title = element_text(hjust = 0.5, size = 14),    # Center title position and size
plot.caption = element_text(hjust = 1), # move caption to the left
axis.text.x = element_text(angle = 90, vjust = 0.25, hjust=1), # rotate X axis labels
legend.position = "top" # Legend position
) +
#geom_line(alpha=0.7, color="blue") +
geom_bar(stat="identity", alpha=0.7, color="blue") +
scale_x_date(limits = as.Date(c(dFrom, dTo)), date_labels="%b-%d-%y",date_breaks  ="2 month") +
facet_grid(~STATE)
# DAY - Plot obs by DAY
ggplot(data=vaers.vax.obs.df, aes(x=DATE_R, y=obs)) +
labs(title = paste0("Deaths by injection date (DIED_DATE) between ", dFrom, " to ", dTo), caption=paste("Source: VAERS (n=", format(round(sum(vaers.vax.obs.df$obs),0), big.mark=","), ")"), x="Date (DIED_DATE)", y="Deaths per day") +
theme(
plot.title = element_text(hjust = 0.5, size = 14),    # Center title position and size
plot.caption = element_text(hjust = 1), # move caption to the left
axis.text.x = element_text(angle = 90, vjust = 0.25, hjust=1), # rotate X axis labels
legend.position = "top" # Legend position
) +
#geom_line(alpha=0.7, color="blue") +
geom_bar(stat="identity", alpha=0.7, color="blue") +
scale_x_date(limits = as.Date(c(dFrom, dTo)), date_labels="%b-%d-%y",date_breaks  ="2 month") +
facet_wrap(~STATE)
# DAY - Plot obs by DAY
ggplot(data=vaers.vax.obs.df, aes(x=DATE_R, y=obs)) +
labs(title = paste0("Deaths by injection date (DIED_DATE) between ", dFrom, " to ", dTo), caption=paste("Source: VAERS (n=", format(round(sum(vaers.vax.obs.df$obs),0), big.mark=","), ")"), x="Date (DIED_DATE)", y="Deaths per day") +
theme(
plot.title = element_text(hjust = 0.5, size = 14),    # Center title position and size
plot.caption = element_text(hjust = 1), # move caption to the left
axis.text.x = element_text(angle = 90, vjust = 0.25, hjust=1), # rotate X axis labels
legend.position = "top" # Legend position
) +
#geom_line(alpha=0.7, color="blue") +
geom_bar(stat="identity", alpha=0.7, color="blue") +
scale_x_date(limits = as.Date(c(dFrom, dTo)), date_labels="%b-%d-%y",date_breaks  ="2 month") +
facet_wrap(~STATE)
shiny::runApp('shiny/cave')
remove.packages('Cairo')
?remove.packages()
remove.packages(Cairo)
remove.packages(cairo)
remove.packages('cairo')
shiny::runApp('shiny/pfizerdox')
runApp('shiny/pfizerdox')
runApp('shiny/pfizerdox')
runApp('shiny/pfizerdox - SAFE')
runApp('shiny/cave')
runApp('shiny/pfizerdox')
